[main]
charset: UTF8
pid_file_path: run/yaturl.pid
staticdocumentroot: static/
log_ip_activated: false
#user: yaturl
thread_watch_timeout: 300
min_url_length: 4

[http]
host: 0.0.0.0
port: 24882
resolve_clients: true
hostname: yaturl.net

[telnet]
enable: true
host: 127.0.0.1
port: 24883

[database]
user: user
password: pw
host: 127.0.0.1
port: 3306
database: db_name
pool_size: 5
max_overflow: 5

[templates]
path = share/yaturl/templates/

[email]
fromemail: example@example.org
toemail: example@example.org


# loggers
[loggers]
keys: root,accesslog

[logger_root]
name: yaturl
level: DEBUG
handlers: console,file_errorlog,file_debug
propagate: 1
qualname: root

[logger_accesslog]
name: accesslog
level: DEBUG
handlers: file_accesslog
propagate: 1
qualname: accesslog


# handlers
[handlers]
keys: console,file_accesslog,file_errorlog,file_debug

[handler_console]
class: StreamHandler
level: NOTSET
formatter: complete
args: (sys.stdout,)

[handler_file_accesslog]
class: FileHandler
level: DEBUG
formatter: accesslog
args: ('log/access.log', 'a')

[handler_file_errorlog]
class: FileHandler
level: WARN
formatter: errorlog
args: ('log/error.log', 'a')

[handler_file_debug]
class: FileHandler
level: DEBUG
formatter: complete
args: ('log/debug.log', 'a')

[formatters]
keys: accesslog,complete,errorlog

[formatter_accesslog]
format: %(message)s

[formatter_errorlog]
format: %(asctime)s: (%(funcName)s():%(lineno)d): %(levelname)s: %(message)s

[formatter_complete]
format: %(asctime)s %(name)-10s (%(funcName)s():%(lineno)d) %(levelname)+8s %(message)s
